apply plugin: 'java'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
     jcenter()
}

ext.sharedManifest = manifest {
    attributes('Implementation-Title': archivesBaseName,
            'Implementation-Version': version,
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date(),
            'Built-JDK': System.getProperty('java.version')
    )
}

sourceSets {
    main {
        if (project.hasProperty('ament.build_space')) {
            output.classesDir = file(project.getProperty('ament.build_space') + '/classes/main')
            output.resourcesDir = file(project.getProperty('ament.build_space') + '/resources/main')
        }
    }
}

dependencies {
    if (project.hasProperty('ament.dependencies')) {
        project.getProperty('ament.dependencies').split(':').each {
            compile fileTree(dir: [it, 'java'].join(File.separator), include: '*.jar')
            testCompile fileTree(dir: [it, 'lib'].join(File.separator), include: '*.jar')
        }
    }
    compile 'com.google.code.gson:gson:2.2.4'
    testCompile 'junit:junit:4.12'
}

jar {
    if (project.hasProperty('ament.install_space')) {
        destinationDir = file(
            [project.getProperty('ament.install_space'), 'share', project.name,
            'java'].join(File.separator)
        )
    }
    manifest = project.manifest {
        from sharedManifest
    }
}

test {
    if (project.hasProperty('ament.install_space')) {
        def current = project.getProperty('ament.install_space') + '/..'
        def tree = fileTree(dir: current, include: '**/lib/*.so')
        def tmp = ''

        tree.visit{element ->
            if (element.isDirectory() && element.name.endsWith('lib')) {
                tmp += element.file.absolutePath + ":"
            }
        }

        systemProperty "java.library.path", tmp + ":" + System.properties['java.library.path']
    }
}

